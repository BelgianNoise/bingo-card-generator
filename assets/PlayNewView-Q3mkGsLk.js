import{d as B,r as m,R as D,t as q,S as E,J as M,L as z,M as F,U as G,f as S,N as b,o as f,h as R,i as y,Q as A,u as P,g as $,x as T,y as v,m as V,a as r,j as K,v as L,l as O,k as U,c as j,e as J,b as Q,V as H,p as X,q as Y,_ as Z}from"./index-anLt7sIJ.js";import{D as ee}from"./DialogComponent-MC7hAD2k.js";import{h as ae}from"./firestore-RIyAmwRB.js";import{G as te}from"./GameInfo-YuwE-zEI.js";const _=c=>(X("data-v-49810a04"),c=c(),Y(),c),oe=_(()=>r("h2",null,"Start playing!",-1)),se={class:"input-container"},re=_(()=>r("label",{for:"card-name"},"Name your bingo card",-1)),ne={key:0,class:"input-description error"},ie=_(()=>r("p",{class:"input-description"}," This is used to identify your bingo card in the future. If you decide to take a break you can always come back and find your card again 👍 ",-1)),ce=B({__name:"PlayNewView",setup(c){const p=A(),h=P(),I=$(),g=p.params.gameId;let a;typeof g=="string"?a=g:a=g[0];const W=m("700px"),N=m(!0),n=m(""),d=m(!1);let e,o,l;D(async()=>{p.query.title&&(n.value=p.query.title);const i=q(T,"games",a);if(e=(await E(i)).data(),e&&e.gridWidth){const t=M(F(T,"entries"),z("gameId","==",a));o=await G(t);const s=e.gridWidth**2;if(l=s-(e.hasFreeSpace?1:0),l<=o.size)N.value=!1;else return console.log({totalFields:s,requiredNumberOfEntries:l,entriesSize:o.size}),x()}else return w()});const w=()=>{h.push("/"),I.emit(S(b.ERROR,`The bingo game you are trying to play does not exist (anymore) 😭.
      Make sure you have the correct link or contact the creator of the game!`,1e4))},x=()=>{h.push("/game/"+a),I.emit(S(b.WARNING,`This bingo game is not ready yet 😭.
      If you are the creator or administrator of this game, please add more possible field values!`,1e4))},k=async()=>{if(d.value=n.value.length<3,d.value)return;if(!e)return w();if(console.log({entries:o}),!o)return x();console.log({entries:o});const i={gameId:a,title:n.value,gridWidth:e.gridWidth,hasFreeSpace:e.hasFreeSpace,freeSpaceText:e.freeSpaceText,createdAt:new Date().getTime(),entryIds:[],chckedEntryIds:[]},t=o.docs.map(u=>u.id);for(let u=0;u<l;u++){const C=Math.floor(Math.random()*t.length);i.entryIds.push(t[C]),t.splice(C,1)}const s=await ae(i);h.push(`/game/${a}/play/${s}`)};return(i,t)=>(f(),R(ee,{open:!N.value,preventClose:!0,maxWidth:W.value},{header:y(()=>[oe]),content:y(()=>[v(e)?(f(),R(te,{key:0,game:v(e),gameId:v(a)},null,8,["game","gameId"])):V("",!0),r("div",se,[re,K(r("input",{id:"card-name",type:"text",onKeyup:O(k,["enter"]),"onUpdate:modelValue":t[0]||(t[0]=s=>n.value=s),placeholder:"Colton's Bingo Card",class:U({error:d.value})},null,34),[[L,n.value]]),d.value?(f(),j("p",ne," Damn you lazy like that? 3 characters minimum! ")):V("",!0),ie])]),footer:y(()=>[r("button",{class:"primary",onClick:k},[J(" Start "),Q(H,{class:"icon",color:"var(--color-foreground)"})])]),_:1},8,["open","maxWidth"]))}}),pe=Z(ce,[["__scopeId","data-v-49810a04"]]);export{pe as default};
